{"version":3,"sources":["components/RichTextEditor.js","components/WordList.js","components/Form.js","App.js","reportWebVitals.js","index.js"],"names":["Component","RichTextEditor","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","editorState","initializeEditorState","isEdit","title","localStorage","getItem","focus","refs","editor","onChange","setState","handleKeyCommand","_handleKeyCommand","bind","assertThisInitialized","mapKeyToEditorCommand","_mapKeyToEditorCommand","toggleInlineStyle","_toggleInlineStyle","handlePublish","_handlePublish","handleEdit","_handleEdit","handleTitle","_handleTitle","handleScreenshot","_handleScreenshot","ref","React","createRef","storeRaw","rawContent","convertFromRaw","JSON","parse","EditorState","createWithContent","createEmpty","command","newState","RichUtils","e","keyCode","getDefaultKeyBinding","newEditorState","onTab","inlineStyle","objectSpread","contentRaw","convertToRaw","getCurrentContent","setItem","stringify","event","preventDefault","target","value","_this2","console","log","takeScreenShot","current","then","image","_ref","arguments","length","undefined","_ref$name","name","_ref$extension","extension","a","document","createElement","href","download","createFileName","click","className","contentState","hasText","getBlockMap","first","getType","react_default","TextField","sx","marginBottom","id","label","variant","fullWidth","RichTextEditor_InlineStyleControls","onToggle","onClick","Draft","customStyleMap","styleMap","keyBindingFn","placeholder","spellCheck","textAlignment","readOnly","Button","marginTop","endIcon","AutoAwesome_default","color","theme","primary","margin","CameraAlt_default","Edit_default","CODE","backgroundColor","fontFamily","fontSize","padding","StyleButton","_this3","style","active","onMouseDown","INLINE_STYLES","InlineStyleControls","currentStyle","getCurrentInlineStyle","map","type","RichTextEditor_StyleButton","key","has","withHooks","useTheme","_useScreenshot","useScreenshot","quality","_useScreenshot2","slicedToArray","assign","WordList","words","word","Form","_useState","useState","_useState2","rhyme","setRhyme","_useState3","_useState4","related","setRelated","_useState5","_useState6","results","setResults","marginLeft","@media screen and (max-width: 550px)","trim","url","concat","fetch","result","json","element","toConsumableArray","error","Search_default","src_components_WordList","App","createTheme","palette","main","ThemeProvider","CssBaseline","src_components_RichTextEditor","src_components_Form","reportWebVitals","onPerfEntry","Function","__webpack_require__","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.901c7833.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  convertToRaw,\r\n  convertFromRaw,\r\n  Editor,\r\n  EditorState,\r\n  getDefaultKeyBinding,\r\n  RichUtils,\r\n} from \"draft-js\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport CameraAltIcon from \"@mui/icons-material/CameraAlt\";\r\nimport AutoAwesomeIcon from \"@mui/icons-material/AutoAwesome\";\r\nimport Button from \"@mui/material/Button\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { useScreenshot, createFileName } from \"use-react-screenshot\";\r\nimport \"./RichTextEditor.css\";\r\nimport \"../../node_modules/draft-js/dist/Draft.css\";\r\n\r\nclass RichTextEditor extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      editorState: this.initializeEditorState(),\r\n      isEdit: true,\r\n      title: localStorage.getItem(\"title\"),\r\n    };\r\n\r\n    this.focus = () => this.refs.editor.focus();\r\n    this.onChange = (editorState) => this.setState({ editorState });\r\n\r\n    this.handleKeyCommand = this._handleKeyCommand.bind(this);\r\n    this.mapKeyToEditorCommand = this._mapKeyToEditorCommand.bind(this);\r\n    this.toggleInlineStyle = this._toggleInlineStyle.bind(this);\r\n    this.handlePublish = this._handlePublish.bind(this);\r\n    this.handleEdit = this._handleEdit.bind(this);\r\n    this.handleTitle = this._handleTitle.bind(this);\r\n    this.handleScreenshot = this._handleScreenshot.bind(this);\r\n\r\n    this.ref = React.createRef(null);\r\n  }\r\n\r\n  initializeEditorState() {\r\n    let editorState = null;\r\n    let storeRaw = localStorage.getItem(\"editorState\");\r\n    if (storeRaw) {\r\n      const rawContent = convertFromRaw(JSON.parse(storeRaw));\r\n      editorState = EditorState.createWithContent(rawContent);\r\n    } else {\r\n      editorState = EditorState.createEmpty();\r\n    }\r\n\r\n    return editorState;\r\n  }\r\n  _handleKeyCommand(command, editorState) {\r\n    const newState = RichUtils.handleKeyCommand(editorState, command);\r\n    if (newState) {\r\n      this.onChange(newState);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  _mapKeyToEditorCommand(e) {\r\n    if (e.keyCode === 9 /* TAB */) {\r\n      const newEditorState = RichUtils.onTab(\r\n        e,\r\n        this.state.editorState,\r\n        4 /* maxDepth */\r\n      );\r\n      if (newEditorState !== this.state.editorState) {\r\n        this.onChange(newEditorState);\r\n      }\r\n      return;\r\n    }\r\n    return getDefaultKeyBinding(e);\r\n  }\r\n\r\n  _toggleInlineStyle(inlineStyle) {\r\n    this.onChange(\r\n      RichUtils.toggleInlineStyle(this.state.editorState, inlineStyle)\r\n    );\r\n  }\r\n\r\n  _handlePublish() {\r\n    this.setState({ ...this.state, isEdit: false });\r\n    let contentRaw = convertToRaw(this.state.editorState.getCurrentContent());\r\n    localStorage.setItem(\"editorState\", JSON.stringify(contentRaw));\r\n    localStorage.setItem(\"title\", this.state.title);\r\n  }\r\n\r\n  _handleEdit() {\r\n    this.setState({ ...this.state, isEdit: true });\r\n    this.focus();\r\n  }\r\n\r\n  _handleTitle(event) {\r\n    event.preventDefault();\r\n    this.setState({ ...this.state, title: event.target.value });\r\n  }\r\n\r\n  _handleScreenshot() {\r\n    console.log('got here');\r\n    this.props.takeScreenShot(this.ref.current).then((image, { name = this.state.title, extension = \"jpg\" } = {}) => {\r\n      const a = document.createElement(\"a\");\r\n      a.href = image;\r\n      a.download = createFileName(extension, name);\r\n      a.click();\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { editorState } = this.state;\r\n\r\n    // If the user changes block type before entering any text, we can\r\n    // either style the placeholder or hide it. Let's just hide it now.\r\n    let className = \"RichEditor-editor\";\r\n    var contentState = editorState.getCurrentContent();\r\n    if (!contentState.hasText()) {\r\n      if (contentState.getBlockMap().first().getType() !== \"unstyled\") {\r\n        className += \" RichEditor-hidePlaceholder\";\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {this.state.isEdit && (\r\n          <TextField\r\n            sx={{\r\n              marginBottom: \"20px\",\r\n            }}\r\n            id=\"filled-basic\"\r\n            label=\"Title\"\r\n            variant=\"filled\"\r\n            fullWidth\r\n            onChange={this.handleTitle}\r\n            value={this.state.title}\r\n          />\r\n        )}\r\n        <div className=\"RichEditor-root\">\r\n          {this.state.isEdit && (\r\n            <InlineStyleControls\r\n              editorState={editorState}\r\n              onToggle={this.toggleInlineStyle}\r\n            />\r\n          )}\r\n          <div className={className} onClick={this.focus} ref={this.ref}>\r\n            {!this.state.isEdit && <p className=\"title\">{this.state.title}</p>}\r\n            <Editor\r\n              customStyleMap={styleMap}\r\n              editorState={editorState}\r\n              handleKeyCommand={this.handleKeyCommand}\r\n              keyBindingFn={this.mapKeyToEditorCommand}\r\n              onChange={this.onChange}\r\n              placeholder=\"Once upon a midnight dreary, while I pondered, weak and weary...\"\r\n              ref=\"editor\"\r\n              spellCheck={true}\r\n              textAlignment=\"center\"\r\n              readOnly={!this.state.isEdit}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"button-container\">\r\n          {this.state.isEdit && (\r\n            <Button\r\n              sx={{\r\n                marginTop: \"5px\",\r\n              }}\r\n              variant=\"contained\"\r\n              endIcon={<AutoAwesomeIcon />}\r\n              onClick={this.handlePublish}\r\n              color={this.props.theme.primary}\r\n            >\r\n              Publish\r\n            </Button>\r\n          )}\r\n          {!this.state.isEdit && (\r\n            <Button\r\n              sx={{\r\n                margin: \"5px 0px\",\r\n              }}\r\n              variant=\"contained\"\r\n              endIcon={<CameraAltIcon />}\r\n              color={this.props.theme.primary}\r\n              onClick={this.handleScreenshot}\r\n            >\r\n              Screenshot\r\n            </Button>\r\n          )}\r\n          {!this.state.isEdit && (\r\n            <Button\r\n              sx={{\r\n                margin: \"5px 5px\",\r\n              }}\r\n              variant=\"contained\"\r\n              endIcon={<EditIcon />}\r\n              onClick={this.handleEdit}\r\n              color={this.props.theme.primary}\r\n            >\r\n              Edit\r\n            </Button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// Custom overrides for \"code\" style.\r\nconst styleMap = {\r\n  CODE: {\r\n    backgroundColor: \"rgba(0, 0, 0, 0.05)\",\r\n    fontFamily: '\"Inconsolata\", \"Menlo\", \"Consolas\", monospace',\r\n    fontSize: 16,\r\n    padding: 2,\r\n  },\r\n};\r\n\r\nclass StyleButton extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.onToggle = (e) => {\r\n      e.preventDefault();\r\n      this.props.onToggle(this.props.style);\r\n    };\r\n  }\r\n\r\n  render() {\r\n    let className = \"RichEditor-styleButton\";\r\n    if (this.props.active) {\r\n      className += \" RichEditor-activeButton\";\r\n    }\r\n\r\n    return (\r\n      <span className={className} onMouseDown={this.onToggle}>\r\n        {this.props.label}\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nvar INLINE_STYLES = [\r\n  { label: \"Bold\", style: \"BOLD\" },\r\n  { label: \"Italic\", style: \"ITALIC\" },\r\n  { label: \"Underline\", style: \"UNDERLINE\" },\r\n];\r\n\r\nconst InlineStyleControls = (props) => {\r\n  const currentStyle = props.editorState.getCurrentInlineStyle();\r\n\r\n  return (\r\n    <div className=\"RichEditor-controls\">\r\n      {INLINE_STYLES.map((type) => (\r\n        <StyleButton\r\n          key={type.label}\r\n          active={currentStyle.has(type.style)}\r\n          label={type.label}\r\n          onToggle={props.onToggle}\r\n          style={type.style}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst withHooks = (Component) => {\r\n  return function WrappedComponent(props) {\r\n    const theme = useTheme();\r\n    const [image, takeScreenShot] = useScreenshot({\r\n      type: \"image/jpeg\",\r\n      quality: 1.0\r\n    });\r\n\r\n    return (\r\n      <Component\r\n        {...props}\r\n        theme={theme}\r\n        image={image}\r\n        takeScreenShot={takeScreenShot}\r\n      />\r\n    );\r\n  };\r\n};\r\n\r\nexport default withHooks(RichTextEditor);\r\n","import React from 'react';\r\nimport './WordList.css';\r\n\r\nconst WordList = (props) => {\r\n\r\n    const words = props.words;\r\n\r\n    return (\r\n        <div className=\"wordList-container\">\r\n            { (words.length > 0) ? words.map(word => {\r\n                return <p key={word}>{word}</p>\r\n            }) : <p>No Results.</p>}\r\n        </div>\r\n    );\r\n    \r\n};\r\n\r\nexport default WordList;","import React, { useState } from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { Button } from \"@mui/material\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport \"./Form.css\";\r\nimport WordList from \"./WordList\";\r\n\r\nconst Form = (props) => {\r\n  const [rhyme, setRhyme] = useState(\"\");\r\n  const [related, setRelated] = useState(\"\");\r\n  const [results, setResults] = useState([]);\r\n\r\n  const theme = useTheme();\r\n\r\n  const handleRhyme = (event) => {\r\n    event.preventDefault();\r\n    setRhyme(event.target.value);\r\n  };\r\n\r\n  const handleRelated = (event) => {\r\n    event.preventDefault();\r\n    setRelated(event.target.value.trim());\r\n  };\r\n\r\n  const handleQuery = () => {\r\n    setResults([]);\r\n    let url = \"\";\r\n    \r\n    if (rhyme.length > 0 && related.length > 0) {\r\n      url = `https://api.datamuse.com/words?ml=${related}&rel_rhy=${rhyme}`;\r\n    } else if (rhyme.length > 0) {\r\n      url = `https://api.datamuse.com/words?rel_rhy=${rhyme}`;\r\n    } else {\r\n      return;\r\n    }\r\n\r\n    fetch(url)\r\n      .then((result) => result.json())\r\n      .then(\r\n        (result) => {\r\n          let words = result.map((element) => {\r\n            return element.word;\r\n          });\r\n          setResults([...words]);\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  return (\r\n    <div className=\"form\">\r\n      <div className=\"textField-container\">\r\n        <TextField\r\n          id=\"outlined-basic\"\r\n          label=\"Rhymes with...\"\r\n          variant=\"outlined\"\r\n          color={theme.primary}\r\n          onChange={handleRhyme}\r\n        />\r\n        <TextField\r\n          sx={{\r\n            marginLeft: \"20px\",\r\n            '@media screen and (max-width: 550px)': {\r\n              marginLeft: \"0px\",\r\n              marginTop: \"10px\"\r\n            }\r\n          }}\r\n          id=\"outlined-basic\"\r\n          label=\"Related to...\"\r\n          variant=\"outlined\"\r\n          color={theme.primary}\r\n          onChange={handleRelated}\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <Button\r\n          sx={{\r\n            marginTop: \"10px\",\r\n          }}\r\n          color={theme.primary}\r\n          variant=\"contained\"\r\n          onClick={handleQuery}\r\n          endIcon={<SearchIcon />}\r\n        >\r\n          Query\r\n        </Button>\r\n      </div>\r\n      <div>\r\n        <WordList words={results} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import \"./App.css\";\nimport RichTextEditor from \"./components/RichTextEditor\";\nimport Form from \"./components/Form\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport React from 'react';\n\nfunction App() {\n  const theme = createTheme({\n    palette: {\n      primary: {\n        main: \"#8c1aff\",\n      },\n    },\n  });\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline>\n        <div className=\"App\">\n          <div className=\"editorApp\">\n            <RichTextEditor />\n          </div>\n          <Form />\n        </div>\n      </CssBaseline>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}