{"version":3,"sources":["components/RichTextEditor.js","components/WordList.js","components/Form.js","components/Theme/ColorModeContextProvider.js","components/Nav.js","App.js","reportWebVitals.js","index.js"],"names":["Component","RichTextEditor","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","editorState","initializeEditorState","isEdit","title","initializeTitleState","focus","refs","editor","onChange","setState","handleKeyCommand","_handleKeyCommand","bind","assertThisInitialized","mapKeyToEditorCommand","_mapKeyToEditorCommand","toggleInlineStyle","_toggleInlineStyle","handlePublish","_handlePublish","handleEdit","_handleEdit","handleTitle","_handleTitle","handleScreenshot","_handleScreenshot","ref","React","createRef","storeRaw","localStorage","getItem","rawContent","convertFromRaw","JSON","parse","EditorState","createWithContent","createEmpty","command","newState","RichUtils","e","keyCode","getDefaultKeyBinding","newEditorState","onTab","inlineStyle","objectSpread","contentRaw","convertToRaw","getCurrentContent","setItem","stringify","event","preventDefault","target","value","_this2","takeScreenShot","current","then","image","_ref","arguments","length","undefined","_ref$name","name","_ref$extension","extension","a","document","createElement","href","download","createFileName","click","className","contentState","hasText","getBlockMap","first","getType","react_default","TextField","sx","marginBottom","id","label","variant","fullWidth","Box","backgroundColor","RichTextEditor_InlineStyleControls","onToggle","onClick","Draft","customStyleMap","styleMap","keyBindingFn","placeholder","spellCheck","textAlignment","readOnly","Button","marginTop","endIcon","AutoAwesome_default","color","theme","primary","margin","CameraAlt_default","Edit_default","CODE","fontFamily","fontSize","padding","StyleButton","_this3","style","active","onMouseDown","INLINE_STYLES","InlineStyleControls","currentStyle","getCurrentInlineStyle","map","type","RichTextEditor_StyleButton","key","has","withHooks","useTheme","_useScreenshot","useScreenshot","quality","_useScreenshot2","slicedToArray","assign","WordList","words","word","Form","_useState","useState","_useState2","rhyme","setRhyme","_useState3","_useState4","related","setRelated","_useState5","_useState6","results","setResults","marginLeft","@media screen and (max-width: 550px)","trim","url","concat","fetch","result","json","element","toConsumableArray","error","console","log","Search_default","src_components_WordList","ColorModeContext","createContext","toggleColorMode","mode","ColorModeContextProvider","_React$useState","_React$useState2","setMode","useMemo","createTheme","palette","main","text","background","default","paper","Provider","prevMode","ThemeProvider","CssBaseline","children","Nav","ctx","useContext","bgcolor","height","top","lineHeight","paddingLeft","fontWeight","alignItems","IconButton","float","mt","mr","LightMode_default","size","DarkMode_default","App","Fragment","src_components_Nav","src_components_RichTextEditor","src_components_Form","reportWebVitals","onPerfEntry","Function","__webpack_require__","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","ColorModeContextProvider_ColorModeContextProvider","src_App"],"mappings":"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","file":"static/js/main.27510162.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  convertToRaw,\r\n  convertFromRaw,\r\n  Editor,\r\n  EditorState,\r\n  getDefaultKeyBinding,\r\n  RichUtils,\r\n} from \"draft-js\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport CameraAltIcon from \"@mui/icons-material/CameraAlt\";\r\nimport AutoAwesomeIcon from \"@mui/icons-material/AutoAwesome\";\r\nimport Button from \"@mui/material/Button\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { useScreenshot, createFileName } from \"use-react-screenshot\";\r\nimport \"./RichTextEditor.css\";\r\nimport \"../../node_modules/draft-js/dist/Draft.css\";\r\nimport { Box } from \"@mui/material\";\r\n\r\nclass RichTextEditor extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      editorState: this.initializeEditorState(),\r\n      isEdit: true,\r\n      title: this.initializeTitleState(),\r\n    };\r\n\r\n    this.focus = () => this.refs.editor.focus();\r\n    this.onChange = (editorState) => this.setState({ editorState });\r\n\r\n    this.handleKeyCommand = this._handleKeyCommand.bind(this);\r\n    this.mapKeyToEditorCommand = this._mapKeyToEditorCommand.bind(this);\r\n    this.toggleInlineStyle = this._toggleInlineStyle.bind(this);\r\n    this.handlePublish = this._handlePublish.bind(this);\r\n    this.handleEdit = this._handleEdit.bind(this);\r\n    this.handleTitle = this._handleTitle.bind(this);\r\n    this.handleScreenshot = this._handleScreenshot.bind(this);\r\n\r\n    this.ref = React.createRef(null);\r\n  }\r\n\r\n  initializeEditorState() {\r\n    let editorState = null;\r\n    let storeRaw = localStorage.getItem(\"editorState\");\r\n    if (storeRaw) {\r\n      const rawContent = convertFromRaw(JSON.parse(storeRaw));\r\n      editorState = EditorState.createWithContent(rawContent);\r\n    } else {\r\n      editorState = EditorState.createEmpty();\r\n    }\r\n\r\n    return editorState;\r\n  }\r\n\r\n  initializeTitleState() {\r\n    let title = localStorage.getItem(\"title\");\r\n    if (title) {\r\n      return title;\r\n    } else {\r\n      title = 'My Poem';\r\n    }\r\n\r\n    return title;\r\n  }\r\n\r\n  _handleKeyCommand(command, editorState) {\r\n    const newState = RichUtils.handleKeyCommand(editorState, command);\r\n    if (newState) {\r\n      this.onChange(newState);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  _mapKeyToEditorCommand(e) {\r\n    if (e.keyCode === 9 /* TAB */) {\r\n      const newEditorState = RichUtils.onTab(\r\n        e,\r\n        this.state.editorState,\r\n        4 /* maxDepth */\r\n      );\r\n      if (newEditorState !== this.state.editorState) {\r\n        this.onChange(newEditorState);\r\n      }\r\n      return;\r\n    }\r\n    return getDefaultKeyBinding(e);\r\n  }\r\n\r\n  _toggleInlineStyle(inlineStyle) {\r\n    this.onChange(\r\n      RichUtils.toggleInlineStyle(this.state.editorState, inlineStyle)\r\n    );\r\n  }\r\n\r\n  _handlePublish() {\r\n    this.setState({ ...this.state, isEdit: false });\r\n    let contentRaw = convertToRaw(this.state.editorState.getCurrentContent());\r\n    localStorage.setItem(\"editorState\", JSON.stringify(contentRaw));\r\n    localStorage.setItem(\"title\", this.state.title);\r\n  }\r\n\r\n  _handleEdit() {\r\n    this.setState({ ...this.state, isEdit: true });\r\n    this.focus();\r\n  }\r\n\r\n  _handleTitle(event) {\r\n    event.preventDefault();\r\n    this.setState({ ...this.state, title: event.target.value });\r\n  }\r\n\r\n  _handleScreenshot() {\r\n    this.props.takeScreenShot(this.ref.current).then((image, { name = this.state.title, extension = \"jpg\" } = {}) => {\r\n      const a = document.createElement(\"a\");\r\n      a.href = image;\r\n      a.download = createFileName(extension, name);\r\n      a.click();\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { editorState } = this.state;\r\n\r\n    // If the user changes block type before entering any text, we can\r\n    // either style the placeholder or hide it. Let's just hide it now.\r\n    let className = \"RichEditor-editor\";\r\n    var contentState = editorState.getCurrentContent();\r\n    if (!contentState.hasText()) {\r\n      if (contentState.getBlockMap().first().getType() !== \"unstyled\") {\r\n        className += \" RichEditor-hidePlaceholder\";\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {this.state.isEdit && (\r\n          <TextField\r\n            sx={{\r\n              marginBottom: \"20px\",\r\n            }}\r\n            id=\"filled-basic\"\r\n            label=\"Title\"\r\n            variant=\"filled\"\r\n            fullWidth\r\n            onChange={this.handleTitle}\r\n            value={this.state.title}\r\n          />\r\n        )}\r\n        <Box className=\"RichEditor-root\" sx={{backgroundColor: 'background.default'}}>\r\n          {this.state.isEdit && (\r\n            <InlineStyleControls\r\n              editorState={editorState}\r\n              onToggle={this.toggleInlineStyle}\r\n            />\r\n          )}\r\n          <Box className={className} onClick={this.focus} ref={this.ref} sx={{backgroundColor: 'background.default'}}>\r\n            {!this.state.isEdit && <p className=\"title\">{this.state.title}</p>}\r\n            <Editor\r\n              customStyleMap={styleMap}\r\n              editorState={editorState}\r\n              handleKeyCommand={this.handleKeyCommand}\r\n              keyBindingFn={this.mapKeyToEditorCommand}\r\n              onChange={this.onChange}\r\n              placeholder=\"Once upon a midnight dreary, while I pondered, weak and weary...\"\r\n              ref=\"editor\"\r\n              spellCheck={true}\r\n              textAlignment=\"center\"\r\n              readOnly={!this.state.isEdit}\r\n            />\r\n          </Box>\r\n        </Box>\r\n        <div className=\"button-container\">\r\n          {this.state.isEdit && (\r\n            <Button\r\n              sx={{\r\n                marginTop: \"5px\",\r\n              }}\r\n              variant=\"contained\"\r\n              endIcon={<AutoAwesomeIcon />}\r\n              onClick={this.handlePublish}\r\n              color={this.props.theme.primary}\r\n            >\r\n              Publish\r\n            </Button>\r\n          )}\r\n          {!this.state.isEdit && (\r\n            <Button\r\n              sx={{\r\n                margin: \"5px 0px\",\r\n              }}\r\n              variant=\"contained\"\r\n              endIcon={<CameraAltIcon />}\r\n              color={this.props.theme.primary}\r\n              onClick={this.handleScreenshot}\r\n            >\r\n              Screenshot\r\n            </Button>\r\n          )}\r\n          {!this.state.isEdit && (\r\n            <Button\r\n              sx={{\r\n                margin: \"5px 5px\",\r\n              }}\r\n              variant=\"contained\"\r\n              endIcon={<EditIcon />}\r\n              onClick={this.handleEdit}\r\n              color={this.props.theme.primary}\r\n            >\r\n              Edit\r\n            </Button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// Custom overrides for \"code\" style.\r\nconst styleMap = {\r\n  CODE: {\r\n    backgroundColor: \"rgba(0, 0, 0, 0.05)\",\r\n    fontFamily: '\"Inconsolata\", \"Menlo\", \"Consolas\", monospace',\r\n    fontSize: 16,\r\n    padding: 2,\r\n  },\r\n};\r\n\r\nclass StyleButton extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.onToggle = (e) => {\r\n      e.preventDefault();\r\n      this.props.onToggle(this.props.style);\r\n    };\r\n  }\r\n\r\n  render() {\r\n    let className = \"RichEditor-styleButton\";\r\n    if (this.props.active) {\r\n      className += \" RichEditor-activeButton\";\r\n    }\r\n\r\n    return (\r\n      <span className={className} onMouseDown={this.onToggle}>\r\n        {this.props.label}\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nvar INLINE_STYLES = [\r\n  { label: \"Bold\", style: \"BOLD\" },\r\n  { label: \"Italic\", style: \"ITALIC\" },\r\n  { label: \"Underline\", style: \"UNDERLINE\" },\r\n];\r\n\r\nconst InlineStyleControls = (props) => {\r\n  const currentStyle = props.editorState.getCurrentInlineStyle();\r\n\r\n  return (\r\n    <div className=\"RichEditor-controls\">\r\n      {INLINE_STYLES.map((type) => (\r\n        <StyleButton\r\n          key={type.label}\r\n          active={currentStyle.has(type.style)}\r\n          label={type.label}\r\n          onToggle={props.onToggle}\r\n          style={type.style}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst withHooks = (Component) => {\r\n  return function WrappedComponent(props) {\r\n    const theme = useTheme();\r\n    const [image, takeScreenShot] = useScreenshot({\r\n      type: \"image/jpeg\",\r\n      quality: 1.0\r\n    });\r\n\r\n    return (\r\n      <Component\r\n        {...props}\r\n        theme={theme}\r\n        image={image}\r\n        takeScreenShot={takeScreenShot}\r\n      />\r\n    );\r\n  };\r\n};\r\n\r\nexport default withHooks(RichTextEditor);\r\n","import React from 'react';\r\nimport './WordList.css';\r\n\r\nconst WordList = (props) => {\r\n\r\n    const words = props.words;\r\n\r\n    return (\r\n        <div className=\"wordList-container\">\r\n            { (words.length > 0) ? words.map(word => {\r\n                return <p key={word}>{word}</p>\r\n            }) : <p>No Results.</p>}\r\n        </div>\r\n    );\r\n    \r\n};\r\n\r\nexport default WordList;","import React, { useState } from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { Button } from \"@mui/material\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport \"./Form.css\";\r\nimport WordList from \"./WordList\";\r\n\r\nconst Form = (props) => {\r\n  const [rhyme, setRhyme] = useState(\"\");\r\n  const [related, setRelated] = useState(\"\");\r\n  const [results, setResults] = useState([]);\r\n\r\n  const theme = useTheme();\r\n\r\n  const handleRhyme = (event) => {\r\n    event.preventDefault();\r\n    setRhyme(event.target.value);\r\n  };\r\n\r\n  const handleRelated = (event) => {\r\n    event.preventDefault();\r\n    setRelated(event.target.value.trim());\r\n  };\r\n\r\n  const handleQuery = () => {\r\n    setResults([]);\r\n    let url = \"\";\r\n    \r\n    if (rhyme.length > 0 && related.length > 0) {\r\n      url = `https://api.datamuse.com/words?ml=${related}&rel_rhy=${rhyme}`;\r\n    } else if (rhyme.length > 0) {\r\n      url = `https://api.datamuse.com/words?rel_rhy=${rhyme}`;\r\n    } else {\r\n      return;\r\n    }\r\n\r\n    fetch(url)\r\n      .then((result) => result.json())\r\n      .then(\r\n        (result) => {\r\n          let words = result.map((element) => {\r\n            return element.word;\r\n          });\r\n          setResults([...words]);\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  return (\r\n    <div className=\"form\">\r\n      <div className=\"textField-container\">\r\n        <TextField\r\n          id=\"outlined-basic\"\r\n          label=\"Rhymes with...\"\r\n          variant=\"outlined\"\r\n          color={theme.primary}\r\n          onChange={handleRhyme}\r\n        />\r\n        <TextField\r\n          sx={{\r\n            marginLeft: \"20px\",\r\n            '@media screen and (max-width: 550px)': {\r\n              marginLeft: \"0px\",\r\n              marginTop: \"10px\"\r\n            }\r\n          }}\r\n          id=\"outlined-basic\"\r\n          label=\"Related to...\"\r\n          variant=\"outlined\"\r\n          color={theme.primary}\r\n          onChange={handleRelated}\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <Button\r\n          sx={{\r\n            marginTop: \"10px\",\r\n          }}\r\n          color={theme.primary}\r\n          variant=\"contained\"\r\n          onClick={handleQuery}\r\n          endIcon={<SearchIcon />}\r\n        >\r\n          Query\r\n        </Button>\r\n      </div>\r\n      <div>\r\n        <WordList words={results} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\n\r\nconst ColorModeContext = React.createContext({\r\n  toggleColorMode: () => {},\r\n  mode: \"light\",\r\n});\r\n\r\nexport const ColorModeContextProvider = (props) => {\r\n  const [mode, setMode] = React.useState(\"light\");\r\n\r\n  const toggleColorMode = () => {\r\n    setMode((prevMode) => (prevMode === \"light\" ? \"dark\" : \"light\"));\r\n  };\r\n\r\n  const theme = React.useMemo(\r\n    () =>\r\n      createTheme({\r\n        palette: {\r\n          primary: {\r\n            main: \"#8c1aff\",\r\n          },\r\n          mode,\r\n          ...(mode === \"light\"\r\n            ? {\r\n                // palette values for light mode\r\n                text: {\r\n                  primary: '#000000'\r\n                },\r\n              }\r\n            : {\r\n                // palette values for dark mode\r\n                background: {\r\n                  default: '#262626',\r\n                  paper: '#262626',\r\n                },\r\n                text: {\r\n                  primary: \"#fff\",\r\n                },\r\n              }),\r\n        },\r\n      }),\r\n    [mode]\r\n  );\r\n\r\n  return (\r\n    <ColorModeContext.Provider\r\n      value={{\r\n        toggleColorMode: toggleColorMode,\r\n      }}\r\n    >\r\n      <ThemeProvider theme={theme}>\r\n        <CssBaseline>{props.children}</CssBaseline>\r\n      </ThemeProvider>\r\n    </ColorModeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ColorModeContext;\r\n","import React from \"react\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { Box } from \"@mui/material\";\r\nimport \"./Nav.css\";\r\nimport LightModeIcon from '@mui/icons-material/LightMode';\r\nimport DarkModeIcon from \"@mui/icons-material/DarkMode\";\r\nimport ColorModeContext from \"./Theme/ColorModeContextProvider\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\n\r\nconst Nav = (props) => {\r\n  const theme = useTheme();\r\n\r\n  const ctx = React.useContext(ColorModeContext);\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        bgcolor: \"primary.main\",\r\n        height: \"4rem\",\r\n        color: \"white\",\r\n        top: \"0\",\r\n        lineHeight: \"4rem\",\r\n        fontSize: \"24px\",\r\n        fontFamily: \"Roboto Mono\",\r\n        paddingLeft: \"20px\",\r\n        fontWeight: \"bold\",\r\n        alignItems: 'center',\r\n      }}\r\n    >\r\n      poe.io ✒️\r\n      <IconButton sx={{ float: \"right\", mt: '0.7rem', mr: '10px'}} onClick={ctx.toggleColorMode} color=\"inherit\">\r\n        {theme.palette.mode === \"dark\" ? <LightModeIcon size=\"large\"/> : <DarkModeIcon />}\r\n      </IconButton>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import \"./App.css\";\nimport RichTextEditor from \"./components/RichTextEditor\";\nimport Form from \"./components/Form\";\nimport React from \"react\";\nimport Nav from \"./components/Nav\";\n\nfunction App() {\n\n  return (\n    <React.Fragment>\n      <Nav />\n      <div className=\"App\">\n        <div className=\"editorApp\">\n          <RichTextEditor />\n        </div>\n        <Form />\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ColorModeContextProvider } from \"./components/Theme/ColorModeContextProvider\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <ColorModeContextProvider>\n      <App />\n    </ColorModeContextProvider>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}